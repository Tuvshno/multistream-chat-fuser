"use strict";var g=Object.defineProperty;var m=(t,e,s)=>e in t?g(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var a=(t,e,s)=>(m(t,typeof e!="symbol"?e+"":e,s),s),d=(t,e,s)=>{if(!e.has(t))throw TypeError("Cannot "+s)};var o=(t,e,s)=>(d(t,e,"read from private field"),s?s.call(t):e.get(t)),h=(t,e,s)=>{if(e.has(t))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(t):e.set(t,s)},u=(t,e,s,r)=>(d(t,e,"write to private field"),r?r.call(t,s):e.set(t,s),s);Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});var n;const c=class c{constructor(e){h(this,n,void 0);a(this,"onmessage");a(this,"onclose");u(this,n,e),o(this,n).addEventListener("message",s=>{this.onmessage&&this.onmessage.call(null,s.data)}),o(this,n).addEventListener("close",()=>{this.onclose&&this.onclose.call(null)}),o(this,n).addEventListener("error",()=>{})}static create(e){return new Promise((s,r)=>{const i=new WebSocket(e);i.addEventListener("open",()=>s(new c(i))),i.addEventListener("error",r)})}send(e){o(this,n).send(e)}close(){o(this,n).close()}};n=new WeakMap;let l=c;exports.BrowserWebSocketTransport=l;
